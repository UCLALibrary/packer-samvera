# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'yaml'

current_dir = File.dirname(File.expand_path(__FILE__))
configs = YAML.load_file("#{current_dir}/vagrant-config.yaml")

# before we even start, let's check to see if the vagrant-sshfs plugin is installed
unless Vagrant.has_plugin?('vagrant-sshfs')
  raise 'required plugin vagrant-sshfs is not installed! \nRecommended action: \ninstall the plugin with the following command:\n\n  vagrant plugin install vagrant-sshfs\n\nGentle reminder: also be sure to install the SSHFS package on your host OS.'
end

# disable vagrant-vbguest plugin so it doesn't cause problems
if Vagrant.has_plugin?('vagrant-vbguest')
  config.vbguest.auto_update = false
  config.vbguest.no_remote = true
end

# disable vagrant-notify because it's caused problems in the past
if Vagrant.has_plugin?('vagrant-notify')
  config.notify.enable = false
end


Vagrant.configure("2") do |config|
  config.vm.box = configs['project_owner'] + "/" + configs['project_name']

  # leave it up to the developer to decide when they want to update
  config.vm.box_check_update = false

  config.vm.network "forwarded_port", guest: 80, host: 3000
  config.vm.network "forwarded_port", guest: 8080, host: 8984
  config.vm.network "forwarded_port", guest: 8983, host: 8983

  config.vm.synced_folder configs['project_name'], "/home/vagrant/" + configs['project_name'], create: true, type: "sshfs", reverse: true
  config.vm.synced_folder '.', '/vagrant', disabled: true

  if File.exists?(File.expand_path("~/.gitconfig"))
    config.vm.provision "file", source: "~/.gitconfig", destination: ".gitconfig"
  end

  if File.exists?(File.expand_path("~/.gitignore"))
    config.vm.provision "file", source: "~/.gitignore", destination: ".gitignore"
  end

  # It shouldn't take this long
  config.vm.boot_timeout = 600

  config.ssh.forward_agent = true
  config.ssh.shell="bash"
  config.ssh.insert_key = false

  config.vm.provider "virtualbox" do |vb|
    vb.memory = "4096"
    vb.name = configs['project_name']
  end

  # Set the name of the VM. See: http://stackoverflow.com/a/17864388/100134
  config.vm.define configs['project_name']

  # Message to display to user after 'vagrant up' completes
  config.vm.post_up_message = "Setup of " + configs['project_name'] + " is now COMPLETE!\nYou can SSH into the new VM via 'vagrant ssh'\n\nNote: To push to GitHub or deploy to a remote server,\nyou must have ssh-agent installed on your host machine"
end

